version: "3.8"

services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cakestore
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/pgdata
    networks:
      - app-network

  redis: # Changed service name from dragonfly to redis
    image: "redis:latest" # Changed image to Redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data # Changed volume name to redisdata
    networks: # Ensure Redis is on the same network
      - app-network
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis # Changed dependency from dragonfly to redis
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=cakestore
      - REDIS_HOST=redis # Changed environment variable from DRAGONFLY_HOST to REDIS_HOST
      - REDIS_PORT=6379 # Changed environment variable from DRAGONFLY_PORT to REDIS_PORT
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - app-network
    depends_on:
      - app
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  redisdata: # Changed volume name from dragonflydata to redisdata
  prometheus_data:
  grafana_data: