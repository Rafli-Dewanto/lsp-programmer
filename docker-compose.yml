version: "3.8"

services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cakestore
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/pgdata
    networks:
      - app-network

  dragonfly:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
    networks: # Ensure Dragonfly is on the same network
      - app-network
    restart: always # Added restart policy for consistency

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - dragonfly
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=cakestore
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379 
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - app-network
    depends_on:
      - app
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  dragonflydata:
  prometheus_data:
  grafana_data:
